import * as vscode from "vscode";

import { UnitTestHelperCommands } from "../constants/commands";
import { getEditorOrThrow, handleErrorMessage } from "../helpers/errorHandlers";
import {
  isTestFile,
  checkIfTestFileExistsAndOpen,
  resolveTestFilePath,
  openSourceFileInEditorPrompt,
} from "../helpers/directoryPathHelpers";
import { getFileNameWithExtension } from "../helpers/fileNameHelpers";

export const openTestFileCommand = vscode.commands.registerCommand(
  UnitTestHelperCommands.openTestFile,
  async () => {
    try {
      const editor = getEditorOrThrow();

      const document = editor.document;
      const fileNameWithPath = document.fileName;

      if (isTestFile(fileNameWithPath)) {
        await openSourceFileInEditorPrompt(fileNameWithPath, true);
        return;
      }

      const testFileNameWithPath = await resolveTestFilePath(fileNameWithPath);

      const isTestFileOpened = await checkIfTestFileExistsAndOpen(
        testFileNameWithPath
      );

      if (!isTestFileOpened) {
        const createOption = "Create test";
        const selection = await vscode.window.showInformationMessage(
          `Test file does not exist for: ${getFileNameWithExtension(
            fileNameWithPath
          )}\n Do you want to create it?`,
          createOption
        );

        if (selection === createOption) {
          await vscode.commands.executeCommand(
            UnitTestHelperCommands.createTestFile
          );
        }
      }
    } catch (error) {
      handleErrorMessage(error);
    }
  }
);
